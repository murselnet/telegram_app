





streamlit run piyasa_anlik/piyasa_anlik_app.py

streamlit run eko_kodlar_veriler/eko_veriler_app.py

streamlit run olaylar/kuresel_olaylar_app.py


venv\Scripts\activate && python analiz_tefas.py

.\venv\Scripts\activate

cd /d 
c:\Users\ASUSPC\Desktop\projePython\analiz_ekoview && venv\Scripts\activate.bat && python analiz_tefas.py



"python.terminal.activateEnvironment": true



git reset
git reset --hard HEAD

git add --renormalize .
git commit -m "Normalize EOL for Python files"

GEMİNİ LLM veya COPILOT
Önce llm e verilecek prompt u ayrıntılı bir şekilde hazırla
sonra prompt u llm ve ve llm den bu değişklikler için bir plan hazırlamasını isteğe
llm planını incele, gerekirse değişklikleri iste ve tatmin olunca planı onayla - aoto accept açık olabilir

CURSOR
pr aç, cursor bugbot run yap >>> webte git entegre et




Ctrl+Shift+P → "Preferences: Open Settings (JSON)" → aşağıdaki ayarları ekleyin:


********************************************************
ÖNEMLİ NOKTALAR
- lambda daki python sürümü ve x86_64 gibi sürümlere dikkat
- paketler hem birbirleri ile hemde python sürümü ile uyumlu olmalı.
- loaklde paketle ziplemeden önce x86_64 göre zip öncesi paket oluşturulmalı

pip freeze > requirements.txt 

varsa bekcilib klasör için temizle

pip install -r requirements.txt -t ./bekcilib --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:

git add > git commit > git push



GEMINI CLI TALİMAT:
Aşağıdaki işlem ve komutları sırasıyla uygula lütfen. Bir işlem tam bitmeden diğerine başlama.
1- bu komutu çalıştır: pip freeze > requirements.txt 
2- bu komutu çalıştıe: pip install -r requirements.txt -t ./bekcilib --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:
3- bu klasör ve dosyaları bekcilib adı ile zip'le (sıkıştırılmış dosya formatı):  bekcilib klasörü, main.py, .gitattributes, .gitignore, 0REF.txt, api_veri_yapisi.txt, README.md  requirements.txt dosyaları.




********************************************************

# 1. Python 3.11 ile sanal ortam oluştur
py -3.11 -m venv venv 
python3.11 -m venv venv > linux

# 2. Sanal ortamı etkinleştir
.\venv\Scripts\activate > win
source venv/bin/activate > linux

# 3. Python sürümünü kontrol et (isteğe bağlı)
python --version

# 4. Gereksinim dosyasındaki paketleri yükle
pip freeze > requirements.txt
pip install -r requirements.txt

# 5. Sanal ortamdan çık
deactivate

pip install -q -U fastapi uvicorn

********************************************************














********************************************************

uvicorn main:app --reload

uvicorn main:app --host 0.0.0.0 --port 8080 --reload > Tüm ağ arayüzlerinden erişime izin verir
uvicorn main:app --host 127.0.0.1 --port 8080 --reload > sadece lokalde

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("app:app", host="0.0.0.0", port=8000, reload=True)



# if __name__ == "__main__":
#     uvicorn.run("main:app", host="0.0.0.0", port=8080, reload=True)
    
    #uvicorn main:app --host 0.0.0.0 --port 8080 --reload > Tüm ağ arayüzlerinden erişime izin verir
    #uvicorn main:app --host 127.0.0.1 --port 8080 --reload > sadece lokalde
    
********************************************************



git reset --hard HEAD


# paketler klasörü olursa lambda_function.py dosya başı aklenecek
import sys
sys.path.insert(0, 'paketler')



pip install -r requirements.txt

pip freeze > requirements.txt 

mkdir paketler

pip install -r requirements.txt -t ./paketler --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:



# eğer kendim zip oluşturusam
cd lambda_projem
zip -r9 lambda_paketim.zip lambda_function.py paketler/   # >>> dikkat > yüklenecekler bu zip e eklenecek
cd ..

Zip dosyasının içinde lambda_function.py ve diğer dosyalarınız kök dizinde olmalıdır, bir üst klasörün içinde değil.

Kütüphanelerinizin Lambda'nın çalıştığı Amazon Linux 2 ortamıyla uyumlu olması 
kritik öneme sahiptir. 
--platform manylinux2014_x86_64 
parametresi bu konuda yardımcı olur.

https://aistudio.google.com/app/prompts/15IJW6MOQnDpaOgbWOgJ1gRu813acMh8J



********************************************************

pip freeze > requirements.txt 

pip install -r requirements.txt -t ./lib --platform manylinux2014_x86_64 --python-version 3.11 --only-binary=:all:

git add > git commit > git push
